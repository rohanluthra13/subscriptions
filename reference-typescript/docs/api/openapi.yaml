openapi: 3.0.3
info:
  title: Subscription Tracker API
  description: API for managing email-based subscription detection and tracking
  version: 1.0.0
  contact:
    name: Subscription Tracker
    url: https://github.com/your-repo/subscription-tracker

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://your-domain.com/api
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /connections/gmail:
    post:
      summary: Initiate Gmail OAuth flow
      description: Generates authorization URL for Gmail OAuth consent
      tags:
        - Gmail Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectGmailRequest'
            example:
              redirect_uri: "http://localhost:3000/dashboard"
      responses:
        '200':
          description: Authorization URL generated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ConnectGmailResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /connections/gmail/callback:
    get:
      summary: Handle Gmail OAuth callback
      description: Processes OAuth callback and stores connection
      tags:
        - Gmail Connection
      security: []  # No API key required for OAuth callback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Authorization code from Google
        - name: state
          in: query
          required: true
          schema:
            type: string
          description: CSRF protection state parameter
      responses:
        '302':
          description: Redirect to success/error page
        '400':
          description: Invalid callback parameters

  /sync/manual:
    post:
      summary: Trigger manual sync
      description: Starts manual incremental sync for the user's Gmail connection
      tags:
        - Sync Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualSyncRequest'
            example:
              connection_id: "optional-connection-id"
      responses:
        '200':
          description: Manual sync started successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ManualSyncResponse'
        '404':
          $ref: '#/components/responses/ConnectionNotFound'
        '409':
          $ref: '#/components/responses/SyncInProgress'
        '429':
          $ref: '#/components/responses/SyncRateLimited'

  /sync/status:
    get:
      summary: Get sync status
      description: Returns current sync status and next scheduled sync time
      tags:
        - Sync Management
      responses:
        '200':
          description: Sync status retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SyncStatusResponse'
        '404':
          $ref: '#/components/responses/ConnectionNotFound'

  /sync/jobs/{jobId}:
    get:
      summary: Get sync job details
      description: Returns job status and progress. Supports SSE for real-time updates.
      tags:
        - Sync Management
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
          description: Sync job ID
        - name: Accept
          in: header
          schema:
            type: string
            enum: [application/json, text/event-stream]
          description: Use 'text/event-stream' for real-time progress updates
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SyncJobStatus'
            text/event-stream:
              schema:
                type: string
                description: Server-sent events stream with job progress updates
        '404':
          $ref: '#/components/responses/JobNotFound'

  /subscriptions:
    get:
      summary: List subscriptions
      description: Returns paginated list of subscriptions with filtering and sorting
      tags:
        - Subscriptions
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, cancelled, paused]
          description: Filter by subscription status
        - name: category
          in: query
          schema:
            type: string
          description: Filter by category
        - name: search
          in: query
          schema:
            type: string
          description: Search vendor names
        - name: sort
          in: query
          schema:
            type: string
            enum: [amount, date, name]
            default: date
          description: Sort field
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of results per page
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of results to skip
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ListSubscriptionsResponse'

  /subscriptions/{subscriptionId}:
    get:
      summary: Get subscription details
      description: Returns details for a specific subscription
      tags:
        - Subscriptions
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          description: Subscription ID
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Subscription'
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'
    
    put:
      summary: Update subscription
      description: Updates subscription details
      tags:
        - Subscriptions
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          description: Subscription ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequest'
            example:
              status: "cancelled"
              user_notes: "Cancelled due to lack of use"
              user_verified: true
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Subscription'
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'
        '400':
          $ref: '#/components/responses/ValidationError'
    
    delete:
      summary: Delete subscription
      description: Permanently deletes a subscription
      tags:
        - Subscriptions
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
          description: Subscription ID
      responses:
        '204':
          description: Subscription deleted successfully
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'

  /export:
    get:
      summary: Export subscriptions
      description: Exports subscriptions in CSV or JSON format
      tags:
        - Data Export
      parameters:
        - name: format
          in: query
          required: true
          schema:
            type: string
            enum: [csv, json]
          description: Export format
        - name: status
          in: query
          schema:
            type: string
            enum: [active, cancelled, paused]
          description: Filter by subscription status
        - name: category
          in: query
          schema:
            type: string
          description: Filter by category
      responses:
        '200':
          description: Export file generated successfully
          content:
            text/csv:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
        '404':
          description: No subscriptions found matching criteria

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (can also be passed as query parameter 'api_key')

  schemas:
    SuccessResponse:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
      required: [data]

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
          required: [code, message]
      required: [error]

    ConnectGmailRequest:
      type: object
      properties:
        redirect_uri:
          type: string
          format: uri
          description: Custom redirect URI after OAuth completion

    ConnectGmailResponse:
      type: object
      properties:
        auth_url:
          type: string
          format: uri
          description: Google OAuth authorization URL
        state:
          type: string
          description: CSRF protection state parameter
      required: [auth_url, state]

    ManualSyncRequest:
      type: object
      properties:
        connection_id:
          type: string
          description: Optional connection ID (defaults to user's active connection)

    ManualSyncResponse:
      type: object
      properties:
        job_id:
          type: string
          description: Sync job ID for tracking progress
        status:
          type: string
          enum: [started]
        message:
          type: string
          description: Human-readable status message
      required: [job_id, status, message]

    SyncStatusResponse:
      type: object
      properties:
        is_syncing:
          type: boolean
          description: Whether a sync is currently running
        current_job:
          type: object
          properties:
            job_id:
              type: string
            job_type:
              type: string
            started_at:
              type: string
              format: date-time
        last_sync_at:
          type: string
          format: date-time
          description: Timestamp of last successful sync
        next_scheduled_sync:
          type: string
          format: date-time
          description: Next scheduled daily sync time
      required: [is_syncing, next_scheduled_sync]

    SyncJobStatus:
      type: object
      properties:
        id:
          type: string
        job_type:
          type: string
          enum: [initial_sync, incremental_sync, manual_sync]
        status:
          type: string
          enum: [running, completed, failed]
        progress:
          type: object
          properties:
            total_emails:
              type: integer
            processed_emails:
              type: integer
            subscriptions_found:
              type: integer
            errors_count:
              type: integer
          required: [total_emails, processed_emails, subscriptions_found, errors_count]
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        error_message:
          type: string
      required: [id, job_type, status, progress, started_at]

    Subscription:
      type: object
      properties:
        id:
          type: string
        vendor_name:
          type: string
        vendor_email:
          type: string
        amount:
          type: string
          description: Amount as decimal string
        currency:
          type: string
          default: USD
        billing_cycle:
          type: string
          enum: [monthly, yearly, weekly, one-time]
        status:
          type: string
          enum: [active, cancelled, paused]
          default: active
        renewal_type:
          type: string
          enum: [auto_renew, manual_renew, cancelled, free_tier, unknown]
          default: auto_renew
        next_billing_date:
          type: string
          format: date
        last_billing_date:
          type: string
          format: date
        category:
          type: string
        confidence_score:
          type: string
          description: Confidence score as decimal string (0.00-1.00)
        user_verified:
          type: boolean
          default: false
        user_notes:
          type: string
        detected_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [id, vendor_name]

    UpdateSubscriptionRequest:
      type: object
      properties:
        status:
          type: string
          enum: [active, cancelled, paused]
        amount:
          type: number
          minimum: 0
        billing_cycle:
          type: string
          enum: [monthly, yearly, weekly, one-time]
        next_billing_date:
          type: string
          format: date
          pattern: '^\d{4}-\d{2}-\d{2}$'
        user_notes:
          type: string
          maxLength: 500
        user_verified:
          type: boolean

    ListSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        total:
          type: integer
          description: Total number of subscriptions matching filters
        summary:
          type: object
          properties:
            total_monthly:
              type: number
              description: Total monthly cost of active subscriptions
            total_yearly:
              type: number
              description: Total yearly cost of active subscriptions
            active_count:
              type: integer
              description: Number of active subscriptions
          required: [total_monthly, total_yearly, active_count]
      required: [subscriptions, total, summary]

  responses:
    Unauthorized:
      description: Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "UNAUTHORIZED"
              message: "Invalid or missing API key"

    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "VALIDATION_ERROR"
              message: "Invalid request parameters"
              details:
                errors: []

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "RATE_LIMIT_EXCEEDED"
              message: "Rate limit exceeded. Try again in 60 seconds"
              details:
                retryAfter: 60

    SyncRateLimited:
      description: Sync rate limit exceeded (10 requests per minute)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "RATE_LIMIT_EXCEEDED"
              message: "Sync rate limit exceeded. Try again in 60 seconds"

    ConnectionNotFound:
      description: Gmail connection not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "CONNECTION_NOT_FOUND"
              message: "No active Gmail connection found"

    SubscriptionNotFound:
      description: Subscription not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "SUBSCRIPTION_NOT_FOUND"
              message: "Subscription with ID xyz not found"

    JobNotFound:
      description: Sync job not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "SUBSCRIPTION_NOT_FOUND"
              message: "Sync job with ID xyz not found"

    SyncInProgress:
      description: A sync is already in progress
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "SYNC_IN_PROGRESS"
              message: "A sync is already in progress for this connection"

tags:
  - name: Gmail Connection
    description: Gmail OAuth connection management
  - name: Sync Management
    description: Email sync and job management
  - name: Subscriptions
    description: Subscription CRUD operations
  - name: Data Export
    description: Data export functionality